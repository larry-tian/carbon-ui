{"ast":null,"code":"var _jsxFileName = \"/Users/ganlintian/Desktop/ML/GreenerAI/carbon_web_testing/frontend/src/pages/explore/Explore.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport Plot from 'react-plotly.js'; // Loading spinner library\n\nimport HashLoader from \"react-spinners/HashLoader\";\nimport ClockLoader from \"react-spinners/ClockLoader\";\nimport { css } from \"@emotion/react\";\nimport './Explore.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Explore = () => {\n  _s();\n\n  const [display, setDisplay] = useState(\"initial_page\");\n  const [graphOne, setGraphOne] = useState(null);\n  const [mappy, setMappy] = useState(null);\n  const [loadingInitial, setLoadingInitial] = useState(false);\n  const [loadingResult, setLoadingResult] = useState(false);\n  const [resultData, setResultData] = useState(undefined);\n  const [loadColor, setLoadColor] = useState(\"#8EB93B\");\n  const override = css`\n        display: block;\n        margin: 0 auto;\n        border-color: red;\n    `;\n  useEffect(() => {\n    setDisplay(\"initial_page\");\n    setLoadingInitial(true);\n    getData();\n  }, []); // Display the intial page, fetch the map/table's data and store it\n\n  const getData = () => {\n    setLoadingResult(true);\n    fetch(\"/all_index\").then(res => res.json()).then(data => {\n      setGraphOne(JSON.parse(data.graphOne));\n      setMappy(JSON.parse(data.mappy));\n      setLoadingInitial(false);\n    });\n  }; // Onclick function when user submit the form\n\n\n  const getResult = () => {\n    // Change the page's display\n    setDisplay(\"result_page\"); // fetch the data using \"Post\" and the form, store it\n\n    fetch(\"/overview\", {\n      method: \"POST\",\n      body: new FormData(document.getElementById(\"explore_form\"))\n    }).then(res => res.json()).then(data => {\n      setResultData(data);\n      setLoadingResult(false);\n    });\n  }; // Create an initial variable to store the map plot\n\n\n  let plot = null;\n\n  if (graphOne !== null) {\n    plot = /*#__PURE__*/_jsxDEV(Plot, {\n      data: graphOne.data,\n      layout: graphOne.layout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 16\n    }, this);\n  } // Disable the form from posting when hit \"submit\"\n\n\n  const handleSubmit = event => {\n    event.preventDefault();\n  }; // Create an initial variable to store the content\n\n\n  let content = null; // Page content will change based on the display's state\n\n  if (display === \"initial_page\") {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!loadingInitial && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Explore\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"explore_form\",\n          method: \"POST\",\n          action: \"/overview\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"data\",\n            children: \"Details of a specific Azure region's WattTime balancing authority:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            name: \"data\",\n            id: \"data\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"nada\",\n              children: \"  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"PJM Roanoke\",\n              children: \"East US\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"PJM DC\",\n              children: \"East US 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"PJM DC\",\n              children: \"East US 2 EUAP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"ERCOT San Antonio\",\n              children: \"South Central US\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"PUD No 2 of Grant County\",\n              children: \"West US 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"National Electricity Market (Australia)\",\n              children: \"Australia Central\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"National Electricity Market (Australia)\",\n              children: \"Australia Central 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"National Electricity Market (Australia)\",\n              children: \"Australia East\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"National Electricity Market (Australia)\",\n              children: \"Australia Southeast\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Ireland\",\n              children: \"North Europe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"United Kingdom\",\n              children: \"UK South\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Netherlands\",\n              children: \"West Europe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"MISO Madison City\",\n              children: \"Central US EUAP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"MISO Madison City\",\n              children: \"Central US\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"PJM Chicago\",\n              children: \"North Central US\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"California ISO Northern\",\n              children: \"West US\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Independent Electricity System Operator (Ontario)\",\n              children: \"Canada Central\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"France\",\n              children: \"France South\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"France\",\n              children: \"France Central\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Hydro Quebec\",\n              children: \"Canada East\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Germany and Luxembourg\",\n              children: \"Germany West Central\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Germany and Luxembourg\",\n              children: \"Germany North\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"PacifiCorp East\",\n              children: \"West Central US\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Arizona Public Service Co\",\n              children: \"West US 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Norway\",\n              children: \"Norway West\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Norway\",\n              children: \"Norway East\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"findButton btn-success btn\",\n            value: \"See Region Emission History\",\n            type: \"submit\",\n            onClick: () => {\n              getResult();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"intensity-table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"map-plot\",\n        children: loadingInitial ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"extra-space\",\n            children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(HashLoader, {\n            color: loadColor,\n            css: override,\n            size: 150\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"loading-title\",\n            children: \"Hang in there!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"loading-desc\",\n            children: \"We are trying to load the page, this might take a while...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"loading-desc\",\n            children: \"Rome wasn't built in a day!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 35\n        }, this) : plot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }, this); // Result page content\n  } else if (display === \"result_page\") {\n    // Create the result content \n    let result = null; // If the result data isn't null\n\n    if (resultData != null) {\n      // If the returned data is an error message\n      if (resultData.type === \"error\") {\n        // Create intial variables to store the error information\n        let errorMsg = resultData.errorMsg;\n        let errorCode = resultData.errorCode; // Return the error message display \n\n        result = /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: errorMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errorCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 26\n        }, this); // Else display the result \n      } else {\n        if (resultData.type === \"region\" || resultData.type === \"region_bad_freq\") {\n          // Create initial varaibles to store the needed information\n          let plotOne = JSON.parse(resultData.plot1);\n          let plotTwo = JSON.parse(resultData.plot2);\n          let plotThree = null;\n          let plotThreeDisplay = null;\n          let titleOne = \"\";\n          let titleTwo = \"\";\n          let titleThree = \"\";\n          let warningMsg = null; // Rename the title based on the returned data type's name\n\n          if (resultData.type === \"region\" || resultData.type === \"region_2\") {\n            titleOne = \"Last 24 Hours:\";\n            titleTwo = \"Last 7 Days:\";\n\n            if (resultData.type === \"region\") {\n              titleThree = \"Last 30 Days:\";\n            }\n          } else {\n            titleOne = \"Past Day:\";\n            titleTwo = \"Past Week:\";\n            warningMsg = /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"***Notice***\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 41\n              }, this), \" WattTime data frequency is greater than 5min. Frequency is \", resultData.msg, \"s \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 38\n            }, this);\n\n            if (resultData.type === \"region_bad_freq\") {\n              titleThree = \"Past Month:\";\n            }\n          } // If the data returned type has 3 plots\n\n\n          if (resultData.type === \"region\" || resultData.type === \"region_bad_freq\") {\n            // Store the third plot's data and create a plot \n            plotThree = JSON.parse(resultData.plot3);\n            plotThreeDisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: titleThree\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Average MOER: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [resultData.display_data.avg_month, /*#__PURE__*/_jsxDEV(\"sup\", {\n                    children: \"lbs\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 87\n                  }, this), \"\\u2044\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"MWh\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 108\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 46\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Percentage of Time at 0g of Carbon: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [resultData.display_data.month, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 68\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Number of Times at 0g of Carbon: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [resultData.display_data.num_month_0, /*#__PURE__*/_jsxDEV(\"sup\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 108\n                  }, this), \"\\u2044\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"day\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 126\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 65\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Plot, {\n                data: plotThree.data,\n                layout: plotThree.layout\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 44\n            }, this);\n          }\n\n          result = /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Balancing Authority: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: resultData.display_data.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Real Time Emissions: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [resultData.display_data.moer_value, /*#__PURE__*/_jsxDEV(\"sup\", {\n                  children: \"lbs\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 91\n                }, this), \"\\u2044\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"MWh\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 112\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: warningMsg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: titleOne\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Average MOER: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [resultData.display_data.avg_day, /*#__PURE__*/_jsxDEV(\"sup\", {\n                    children: \"lbs\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 85\n                  }, this), \"\\u2044\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"MWh\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 106\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 46\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Percentage of Time at 0g of Carbon: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [resultData.display_data.day, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 68\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Number of Times at 0g of Carbon: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [resultData.display_data.num_day_0, /*#__PURE__*/_jsxDEV(\"sup\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 106\n                  }, this), \"\\u2044\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"day\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 124\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 65\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Plot, {\n                data: plotOne.data,\n                layout: plotOne.layout\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: titleTwo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Average MOER: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [resultData.display_data.avg_week, /*#__PURE__*/_jsxDEV(\"sup\", {\n                    children: \"lbs\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 86\n                  }, this), \"\\u2044\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"MWh\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 107\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 46\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Percentage of Time at 0g of Carbon: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [resultData.display_data.week, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 68\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Number of Times at 0g of Carbon: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [resultData.display_data.num_week_0, /*#__PURE__*/_jsxDEV(\"sup\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 107\n                  }, this), \"\\u2044\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                    children: \"day\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 125\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 65\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Plot, {\n                data: plotTwo.data,\n                layout: plotTwo.layout\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 25\n            }, this), plotThreeDisplay]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 30\n          }, this); // In case something went wrong, display error message manually\n        } else {\n          result = /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Sorry, somthing went wrong\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 30\n          }, this);\n        }\n      }\n    }\n\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: loadingResult ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"extra-space\",\n          children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ClockLoader, {\n          color: loadColor,\n          css: override,\n          size: 150\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loading-title\",\n          children: \"Trying to find the emission history\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loading-desc\",\n          children: \"This might take a few seconds, a watched pot never boils!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 19\n    }, this);\n  } // Return the Explore page\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Explore, \"5Hm79Q9afuzxbdQ4gRMiAdZWSZA=\");\n\n_c = Explore;\nexport default Explore;\n\nvar _c;\n\n$RefreshReg$(_c, \"Explore\");","map":{"version":3,"sources":["/Users/ganlintian/Desktop/ML/GreenerAI/carbon_web_testing/frontend/src/pages/explore/Explore.js"],"names":["React","useState","useEffect","Link","useHistory","Plot","HashLoader","ClockLoader","css","Explore","display","setDisplay","graphOne","setGraphOne","mappy","setMappy","loadingInitial","setLoadingInitial","loadingResult","setLoadingResult","resultData","setResultData","undefined","loadColor","setLoadColor","override","getData","fetch","then","res","json","data","JSON","parse","getResult","method","body","FormData","document","getElementById","plot","layout","handleSubmit","event","preventDefault","content","result","type","errorMsg","errorCode","plotOne","plot1","plotTwo","plot2","plotThree","plotThreeDisplay","titleOne","titleTwo","titleThree","warningMsg","msg","plot3","display_data","avg_month","month","num_month_0","name","moer_value","avg_day","day","num_day_0","avg_week","week","num_week_0"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport Plot from 'react-plotly.js';\n\n// Loading spinner library\nimport HashLoader from \"react-spinners/HashLoader\";\nimport ClockLoader from \"react-spinners/ClockLoader\";\n\nimport { css } from \"@emotion/react\";\n\nimport './Explore.css'\n\nconst Explore = () => {\n\n    const [display, setDisplay] = useState(\"initial_page\");\n    const [graphOne, setGraphOne] = useState(null);\n    const [mappy, setMappy] = useState(null);\n    const [loadingInitial, setLoadingInitial] = useState(false);\n    const [loadingResult, setLoadingResult] = useState(false);\n    const [resultData, setResultData] = useState(undefined);\n    const [loadColor, setLoadColor] = useState(\"#8EB93B\");\n\n    const override = css`\n        display: block;\n        margin: 0 auto;\n        border-color: red;\n    `;\n\n    useEffect(() => {\n        setDisplay(\"initial_page\");\n        setLoadingInitial(true)\n        getData();\n    }, [])\n\n    \n    // Display the intial page, fetch the map/table's data and store it\n    const getData = () => {\n        setLoadingResult(true);\n        fetch(\"/all_index\").then(\n            res => res.json()\n\n        ).then(data => {\n            setGraphOne(JSON.parse(data.graphOne));\n            setMappy(JSON.parse(data.mappy));\n            setLoadingInitial(false);\n        })\n    }\n\n    // Onclick function when user submit the form\n    const getResult = () => {\n        // Change the page's display\n        setDisplay(\"result_page\");\n\n        // fetch the data using \"Post\" and the form, store it\n        fetch(\"/overview\", {\n            method: \"POST\", \n            body: new FormData(document.getElementById(\"explore_form\")),\n        }).then(\n            res => res.json()\n        ).then(data => {\n            setResultData(data)\n            setLoadingResult(false);\n        })\n        \n    }\n\n    // Create an initial variable to store the map plot\n    let plot = null\n\n    if (graphOne !== null) {\n        plot = <Plot data={graphOne.data} layout={graphOne.layout}/>\n    } \n    \n    // Disable the form from posting when hit \"submit\"\n    const handleSubmit = (event) => {\n        event.preventDefault()\n    }\n\n    // Create an initial variable to store the content\n    let content = null \n\n    // Page content will change based on the display's state\n    if (display === \"initial_page\") {\n        content = <div>\n            {!loadingInitial && \n            <div className=\"form-container\">\n                <p>Explore</p>\n\n                <form id=\"explore_form\" method=\"POST\" action=\"/overview\" onSubmit={handleSubmit}>\n                    <label htmlFor=\"data\">Details of a specific Azure region's WattTime balancing authority:</label>\n                \n                    <select className=\"form-control\" name=\"data\" id=\"data\">\n                        <option value=\"nada\">  </option>\n                        <option value=\"PJM Roanoke\">East US</option>\n                        <option value=\"PJM DC\">East US 2</option>\n                        <option value=\"PJM DC\">East US 2 EUAP</option>\n                        <option value=\"ERCOT San Antonio\">South Central US</option>\n                        <option value=\"PUD No 2 of Grant County\">West US 2</option>\n                        <option value=\"National Electricity Market (Australia)\">Australia Central</option>\n                        <option value=\"National Electricity Market (Australia)\">Australia Central 2</option>\n                        <option value=\"National Electricity Market (Australia)\">Australia East</option>\n                        <option value=\"National Electricity Market (Australia)\">Australia Southeast</option>\n                        <option value=\"Ireland\">North Europe</option>\n                        <option value=\"United Kingdom\">UK South</option>\n                        <option value=\"Netherlands\">West Europe</option>\n                        <option value=\"MISO Madison City\">Central US EUAP</option>\n                        <option value=\"MISO Madison City\">Central US</option>\n                        <option value=\"PJM Chicago\">North Central US</option>\n                        <option value=\"California ISO Northern\">West US</option>\n                        <option value=\"Independent Electricity System Operator (Ontario)\">Canada Central</option>\n                        <option value=\"France\">France South</option>\n                        <option value=\"France\">France Central</option>\n                        <option value=\"Hydro Quebec\">Canada East</option>\n                        <option value=\"Germany and Luxembourg\">Germany West Central</option>\n                        <option value=\"Germany and Luxembourg\">Germany North</option>\n                        <option value=\"PacifiCorp East\">West Central US</option>\n                        <option value=\"Arizona Public Service Co\">West US 3</option>\n                        <option value=\"Norway\">Norway West</option>\n                        <option value=\"Norway\">Norway East</option>\n                    </select>\n                    <br />\n\n                    <input \n                        className=\"findButton btn-success btn\" \n                        value=\"See Region Emission History\"\n                        type=\"submit\"\n                        onClick= {() => {\n                            getResult()\n                        }}\n                    />\n\n                </form>\n            </div>}\n\n            <div>\n                <br></br>\n            </div>\n\n            <div className=\"intensity-table\">\n\n            </div>\n\n            <div id=\"map-plot\">\n                {loadingInitial ? <div className=\"loading\">\n                    {/* Loading screen */}\n                    <div className=\"extra-space\">\n                        <br />\n                    </div> \n                \n                    <HashLoader color={loadColor} css={override} size={150}/>\n                    <p className=\"loading-title\">Hang in there!</p>\n                    <p className=\"loading-desc\">We are trying to load the page, this might take a while...</p>\n                    <p className=\"loading-desc\">Rome wasn't built in a day!</p>\n                </div> : plot}\n            </div>\n        </div>\n    \n    // Result page content\n    } else if (display === \"result_page\") {\n\n        // Create the result content \n        let result = null;\n\n        // If the result data isn't null\n        if (resultData != null) {\n            // If the returned data is an error message\n            if (resultData.type === \"error\") {\n                // Create intial variables to store the error information\n                let errorMsg = resultData.errorMsg;\n                let errorCode = resultData.errorCode;\n    \n                // Return the error message display \n                result = <div>\n                    <p>{errorMsg}</p>\n                    <p>{errorCode}</p>\n                </div>\n\n            // Else display the result \n            } else {\n                if (resultData.type === \"region\" || resultData.type === \"region_bad_freq\") {\n                    // Create initial varaibles to store the needed information\n                    let plotOne = JSON.parse(resultData.plot1);\n                    let plotTwo = JSON.parse(resultData.plot2);\n                    let plotThree = null;\n                    let plotThreeDisplay = null;\n\n                    let titleOne = \"\";\n                    let titleTwo = \"\";\n                    let titleThree = \"\";\n                    let warningMsg = null;\n                    \n                    // Rename the title based on the returned data type's name\n                    if (resultData.type === \"region\" || resultData.type === \"region_2\") {\n                        titleOne = \"Last 24 Hours:\";\n                        titleTwo = \"Last 7 Days:\";\n\n                        if (resultData.type === \"region\") {\n                            titleThree = \"Last 30 Days:\"\n                        }\n                    } else {\n                        titleOne = \"Past Day:\";\n                        titleTwo = \"Past Week:\";\n                        warningMsg = <p><strong>***Notice***</strong> WattTime data frequency is greater than 5min. Frequency is {resultData.msg}s </p>\n\n                        if (resultData.type === \"region_bad_freq\") {\n                            titleThree = \"Past Month:\";\n                        }\n                    }\n\n                    // If the data returned type has 3 plots\n                    if (resultData.type === \"region\" || resultData.type === \"region_bad_freq\") {\n                        // Store the third plot's data and create a plot \n                        plotThree = JSON.parse(resultData.plot3)\n                        plotThreeDisplay = <div className=\"row\">\n                            <p>{titleThree}</p>\n                            <p>Average MOER: <span>{resultData.display_data.avg_month}<sup>lbs</sup>&frasl;<sub>MWh</sub></span></p>\n                            <p>Percentage of Time at 0g of Carbon: <span>{resultData.display_data.month}%</span></p>\n                            <p>Number of Times at 0g of Carbon: <span>{resultData.display_data.num_month_0}<sup></sup>&frasl;<sub>day</sub></span></p>\n                            <Plot data={plotThree.data} layout={plotThree.layout}/>\n                        </div>\n                    }\n\n                    result = <div>\n                        {/* Display the title */}\n                        <p>Balancing Authority: <span>{resultData.display_data.name}</span></p>\n                        <p>Real Time Emissions: <span>{resultData.display_data.moer_value}<sup>lbs</sup>&frasl;<sub>MWh</sub></span></p>\n                        <p>{warningMsg}</p>\n\n                        {/* Display plot one */}\n                        <div className=\"row\">\n                            <p>{titleOne}</p>\n                            <p>Average MOER: <span>{resultData.display_data.avg_day}<sup>lbs</sup>&frasl;<sub>MWh</sub></span></p>\n                            <p>Percentage of Time at 0g of Carbon: <span>{resultData.display_data.day}%</span></p>\n                            <p>Number of Times at 0g of Carbon: <span>{resultData.display_data.num_day_0}<sup></sup>&frasl;<sub>day</sub></span></p>\n                            <Plot data={plotOne.data} layout={plotOne.layout}/>\n                        </div>\n                        \n                        {/* Display plot two */}\n                        <div className=\"row\">\n                            <p>{titleTwo}</p>\n                            <p>Average MOER: <span>{resultData.display_data.avg_week}<sup>lbs</sup>&frasl;<sub>MWh</sub></span></p>\n                            <p>Percentage of Time at 0g of Carbon: <span>{resultData.display_data.week}%</span></p>\n                            <p>Number of Times at 0g of Carbon: <span>{resultData.display_data.num_week_0}<sup></sup>&frasl;<sub>day</sub></span></p>\n                            <Plot data={plotTwo.data} layout={plotTwo.layout}/>\n                        </div>\n\n                        {/* Display plot three */}\n                        {plotThreeDisplay}\n\n                    </div>\n                // In case something went wrong, display error message manually\n                } else {\n                    result = <div>\n                        <p>Sorry, somthing went wrong</p>\n                    </div>\n                }\n            }\n        }\n\n        content = <div>\n            {loadingResult ? <div className=\"loading\">\n                <div className=\"extra-space\">\n                    <br />\n                </div> \n            \n                <ClockLoader color={loadColor} css={override} size={150}/>\n                <p className=\"loading-title\">Trying to find the emission history</p>\n                <p className=\"loading-desc\">This might take a few seconds, a watched pot never boils!</p>\n            </div> : \n            <div> \n                {result}\n            </div>}\n        </div>\n    }\n\n\n    // Return the Explore page\n    return(    \n        <div>\n            {content}\n        </div>\n    );\n}\n\nexport default Explore; \n\n"]},"metadata":{},"sourceType":"module"}