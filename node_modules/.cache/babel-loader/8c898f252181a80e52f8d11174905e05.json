{"ast":null,"code":"var _jsxFileName = \"/Users/ganlintian/Desktop/ML/GreenerAI/carbon_web_testing/frontend/src/pages/documentation/resources/api_docs/ApiDocs.js\";\nimport React from 'react';\nimport './ApiDocs.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ApiDocs = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"doc\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"doc-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"xs-extra-space\",\n        children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"mt-5 doc-title blue\",\n          children: \"Accepted Input Formats for Timestamps\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mainInfo mt-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"infoTitle\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Preconfigured as ISO format preferred\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Easy input with the following constraints:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Possible value separators:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"subBullet\",\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Spaces, Dashes, Backslashes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"If Month is written in english\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"subBullet\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"month-day-year    \\u2003\\u2003\\u2003 ex: July 24 2020\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"year-month-day    \\u2003\\u2003\\u2003  ex: 2020 July 24\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"month-year-day \\u2003\\u2003\\u2003   ex: July 2020 24\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"day-year-month    \\u2003\\u2003\\u2003  ex: 24 2020 July\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"year-day-month   \\u2003\\u2003\\u2003   ex: 2020 24 July\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"If month is numeric representation, day and month need to be connected with month preceding day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"subBullet\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"month-day-year   \\u2003\\u2003\\u2003 ex: 7/24/2020\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"year-month-day \\u2003\\u2003\\u2003  ex: 2020/7/24\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Accepts both 12 and 24-hour clocks formats\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"subBullet\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Default input is 24-hour clock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"12-hour am/pm designations accepted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Precision Designation:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"subBullet\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Needs only 1 digit in hour position\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Must use colons to separate time precision levels\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Can specify time to only 2 digits of precision for each time position, down to seconds marker\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"subBullet\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Time precision format HH:MM:SS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Ex: If 1 is input, it assumes 01:00:00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Ex: If 1pm in input, it assumes 13:00:00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Time Zone:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Input with a ISO numeric offset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"subBullet\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Ex: Time input as: 13:00:00-0800\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"If not preconfigured ISO:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"subBullet\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"A space is needed between datetime and time zone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Explicitly designate time zone via standard abbreviation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"subBullet\",\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Ex: PST, CST, PDT, etc.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Time zone is an optional time input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"If none designated, default assumption is UTC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"If no given datetime stamp is given for an endpoint that requires one as a parameter, defaults to current datetime as input.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"xs-extra-space\",\n        children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ApiDocs;\nexport default ApiDocs;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApiDocs\");","map":{"version":3,"sources":["/Users/ganlintian/Desktop/ML/GreenerAI/carbon_web_testing/frontend/src/pages/documentation/resources/api_docs/ApiDocs.js"],"names":["React","ApiDocs"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './ApiDocs.css'\n\nconst ApiDocs = () => {\n\n    return(    \n        <div className=\"doc\">\n            <div className=\"doc-content\">\n                <div className=\"xs-extra-space\">\n                    <br />\n                </div> \n\n                <div className=\"body\">\n                    <h1 className=\"mt-5 doc-title blue\">Accepted Input Formats for Timestamps</h1>\n\n                    <div className=\"mainInfo mt-5\">\n                        <p className=\"infoTitle\"><strong>Preconfigured as ISO format preferred</strong></p>\n                        <p><strong>Easy input with the following constraints:</strong></p>\n                        <ul>\n                        <li>Possible value separators:</li>\n                            <ul className=\"subBullet\">\n                            <li>Spaces, Dashes, Backslashes</li>\n                            </ul>\n                        </ul>\n\n                        <br />\n                        <br />\n\n                        <b>Date:</b>\n                        <li>If Month is written in english</li>\n                \n                        <ul className=\"subBullet\">\n                            <li>month-day-year    &emsp;&emsp;&emsp; ex: July 24 2020</li>\n                            <li>year-month-day    &emsp;&emsp;&emsp;  ex: 2020 July 24</li>\n                            <li>month-year-day &emsp;&emsp;&emsp;   ex: July 2020 24</li>\n                            <li>day-year-month    &emsp;&emsp;&emsp;  ex: 24 2020 July</li>\n                            <li>year-day-month   &emsp;&emsp;&emsp;   ex: 2020 24 July</li>\n                        </ul>\n                        <li>If month is numeric representation, day and month need to be connected with month preceding day</li>\n                        <ul className=\"subBullet\">\n                            <li>month-day-year   &emsp;&emsp;&emsp; ex: 7/24/2020</li>\n                            <li>year-month-day &emsp;&emsp;&emsp;  ex: 2020/7/24</li>\n                        </ul>\n\n                        <br />\n                        <br />\n\n                        <b>Time:</b> \n                        <li>Accepts both 12 and 24-hour clocks formats</li>\n                        <ul className=\"subBullet\">\n                            <li>Default input is 24-hour clock</li>\n                            <li>12-hour am/pm designations accepted</li>\n                        </ul>\n\n                        <br />\n                        <br />\n\n                        <b>Precision Designation:</b>\n                        <ul className=\"subBullet\">\n                            <li>Needs only 1 digit in hour position</li>\n                            <li>Must use colons to separate time precision levels</li>\n                            <li>Can specify time to only 2 digits of precision for each time position, down to seconds marker</li>\n                                <ul className=\"subBullet\">\n                                    <li>Time precision format HH:MM:SS</li>\n                                    <li>Ex: If 1 is input, it assumes 01:00:00</li>\n                                    <li>Ex: If 1pm in input, it assumes 13:00:00</li>\n                                </ul>\n                        </ul>\n\n                        <br />\n                        <br />\n\n                        <b>Time Zone:</b>\n                        <li>Input with a ISO numeric offset</li>\n                        <ul className=\"subBullet\">\n                        <li>Ex: Time input as: 13:00:00-0800</li>\n                        </ul>\n                        <li>If not preconfigured ISO:</li>\n                        <ul className=\"subBullet\">\n                            <li>A space is needed between datetime and time zone</li>\n                            <li>Explicitly designate time zone via standard abbreviation</li>\n                            <ul className=\"subBullet\">\n                                <li>Ex: PST, CST, PDT, etc.</li>\n                            </ul>\n                            <li>Time zone is an optional time input</li>\n                            <li>If none designated, default assumption is UTC</li>\n                        </ul>\n\n                        <p>If no given datetime stamp is given for an endpoint that requires one as a parameter, defaults to current datetime as input.</p>\n                    </div>\n                </div>\n\n                <div className=\"xs-extra-space\">\n                        <br />\n                </div>\n\n            </div>\n        </div>\n    );\n}\n\nexport default ApiDocs; "]},"metadata":{},"sourceType":"module"}